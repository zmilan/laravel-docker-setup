version: '3.8'

services:
  {{PROJECT_NAME}}_nginx:
    image: nginx:1.21-alpine
    container_name: {{PROJECT_NAME}}_nginx
    restart: unless-stopped
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - {{PROJECT_NAME}}_backend
    networks:
      - {{PROJECT_NAME}}_network
    links:
      - {{PROJECT_NAME}}_backend

  {{PROJECT_NAME}}_backend:
    build:
      context: ./.docker/backend
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    container_name: {{PROJECT_NAME}}_backend
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html/{{PROJECT_NAME}}/
      - ./.docker/backend/apache-default.conf:/etc/apache2/sites-available/000-default.conf
    working_dir: /var/www/html/{{PROJECT_NAME}}/
    networks:
      - {{PROJECT_NAME}}_network
    depends_on:
      {{PROJECT_NAME}}_mysql:
          condition: service_healthy
    links:
      - {{PROJECT_NAME}}_mysql

  {{PROJECT_NAME}}_mysql:
    image: mysql:5.7
    container_name: {{PROJECT_NAME}}_mysql
    restart: unless-stopped
    tty: true
    environment:
      - "MYSQL_DATABASE={{PROJECT_NAME}}"
      - "MYSQL_USER={{PROJECT_NAME}}_user"
      - "MYSQL_PASSWORD={{PROJECT_NAME}}_user_pwd"
      - "MYSQL_ROOT_PASSWORD={{PROJECT_NAME}}_root_pwd"
      - "MYSQL_ROOT_HOST=%"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u {{PROJECT_NAME}}_user --password={{PROJECT_NAME}}_user_pwd
      interval: 5s
      retries: 10
    networks:
      - {{PROJECT_NAME}}_network
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./.mysqldata:/var/lib/mysql

  {{PROJECT_NAME}}_mailpit:
    image: axllent/mailpit:v1.8
    container_name: {{PROJECT_NAME}}_mailpit
    restart: unless-stopped
    networks:
      - {{PROJECT_NAME}}_network

  {{PROJECT_NAME}}redis:
    image: redis:7.2.0
    container_name: {{PROJECT_NAME}}_redis
    restart: unless-stopped
    networks:
      - {{PROJECT_NAME}}_network
volumes:
  mysqldata:

networks:
  {{PROJECT_NAME}}_network:

# docker-compose down -v --rmi all --remove-orphans
